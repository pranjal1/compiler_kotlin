// function
fun test1(i: Int) -> Int {
return i*100;
}

// composite function
fun test2(i: Int) -> Int {
return test1(i);
}

// recursion
fun fib(i: Int) -> Int {
 if (i <= 1)
 return 1;
 else
 return i * fib(i-1);
 }


//no return type

fun length_of_arr(x: [Int]) -> Unit {
    print(len(x));
}

// Any type as parameter
fun test(x:Any)->Unit{
    print(x);
}

test(1);
test("Hello");


print(test1(3));
print(test2(3));
print(fib(5));

length_of_arr([1,2,3]);