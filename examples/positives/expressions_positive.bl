fun add(x: Int, y: Int) -> Int {
    return x + y;
}

fun subtract(x: Int, y: Int) -> Int {
    return x - y;
}

fun mod(x: Int, y: Int) -> Int {
    return x % y;
}

fun multiplication(x: Int, y: Int) -> Int {
    return x * y;
}

// Arithmetic operations
print("Arithmetic Expression Checking_ Expected: 8, 3, 2, 15");
print(add(5,3));
print(subtract(6,3));
print(mod(5,3));
print(multiplication(5,3));

fun compare_greater_than(x: Int, y: Int) -> Boolean {
    return x > y;
}

fun compare_greater_than_equal(x: Int, y: Int) -> Boolean {
    return x >= y;
}

fun compare_less_than(x: Int, y: Int) -> Boolean {
    return x < y;
}

fun compare_less_than_equal(x: Int, y: Int) -> Boolean {
    return x <= y;
}

// Comparison operations
print("Greater than Expression Checking_ Expected: true, false, false");
print(compare_greater_than(5,3));
print(compare_greater_than(3,5));
print(compare_greater_than(5,5));

print("Greater than equal Expression Checking_ Expected: true, false, true");
print(compare_greater_than_equal(5,3));
print(compare_greater_than_equal(3,5));
print(compare_greater_than_equal(5,5));

print("Less than Expression Checking_ Expected: false, true, false");
print(compare_less_than(5,3));
print(compare_less_than(3,5));
print(compare_less_than(5,5));

print("Less than equal Expression Checking_ Expected: false, true, true");
print(compare_less_than_equal(5,3));
print(compare_less_than_equal(3,5));
print(compare_less_than_equal(5,5));

fun not_expression(x: Boolean) -> Boolean {
    return !x;
}

fun and_expression(x: Boolean, y: Boolean) -> Boolean {
    return (x && y);
}

fun or_expression(x: Boolean, y: Boolean) -> Boolean {
    return (x || y);
}

// logical operations
print("NOT Expression Checking_ Expected: false, true");
print(not_expression(true));
print(not_expression(false));

print("AND Expression Checking_ Expected: true, false, false, false");
print(and_expression(true, true));
print(and_expression(true, false));
print(and_expression(false, true));
print(and_expression(false, false));

print("OR Expression Checking_ Expected: true, true, true, false");
print(or_expression(true, true));
print(or_expression(true, false));
print(or_expression(false, true));
print(or_expression(false, false));


fun grouping(x: Int, y: Int, z: Int) -> Int {
    return (x * y) + z;
}
// Grouping calculation
print("Group Calculation Checking_ Expected: 20");
print(grouping(6,3,2));

fun precedence(x: Int, y: Int, z: Int) -> Int {
    return x + y * z;
}
// Precedence checking (should print 12)
print("Precedence Checking_ Expected: 12");
print(precedence(6,3,2));
